{"version":3,"file":"worker.js","sources":["../src/libs/async.js","../src/libs/mime.js","../src/libs/pathjoin.js","../src/libs/bintools.js","../src/libs/msgpack.js","../src/libs/link.js","../src/libs/idb-keyval.js","../src/libs/cas-idb.js","../src/worker.js"],"sourcesContent":["\n// Usage: async(function* (...args) { yield promise... })(..args) -> Promise\nexport function async(gen) {\n  return function (...args) {\n    return run(gen(...args));\n  };\n}\n// Usage: run(iter) -> Promise\nexport function run(iter) {\n  try { return handle(iter.next()); }\n  catch (ex) { return Promise.reject(ex); }\n  function handle(result){\n    if (result.done) return Promise.resolve(result.value);\n    return Promise.resolve(result.value).then(function (res) {\n      return handle(iter.next(res));\n    }).catch(function (err) {\n      return handle(iter.throw(err));\n    });\n  }\n}\n\nexport function runAll(iters) {\n  return Promise.all(iters.map(run));\n}\n","// A simple mime database.\nlet types;\n\nexport let defaultMime = \"application/octet-stream\";\n\nexport function guess(path) {\n  path = path.toLowerCase().trim();\n  var index = path.lastIndexOf(\"/\");\n  if (index >= 0) {\n    path = path.substr(index + 1);\n  }\n  index = path.lastIndexOf(\".\");\n  if (index >= 0) {\n    path = path.substr(index + 1);\n  }\n  return types[path] || defaultMime;\n}\n\n// Borrowed and passed around from who knows where, last grabbed from connect.\ntypes = {\n  \"3gp\": \"video/3gpp\",\n  a: \"application/octet-stream\",\n  ai: \"application/postscript\",\n  aif: \"audio/x-aiff\",\n  aiff: \"audio/x-aiff\",\n  asc: \"application/pgp-signature\",\n  asf: \"video/x-ms-asf\",\n  asm: \"text/x-asm\",\n  asx: \"video/x-ms-asf\",\n  atom: \"application/atom+xml\",\n  au: \"audio/basic\",\n  avi: \"video/x-msvideo\",\n  bat: \"application/x-msdownload\",\n  bin: \"application/octet-stream\",\n  bmp: \"image/bmp\",\n  bz2: \"application/x-bzip2\",\n  c: \"text/x-csrc\",\n  cab: \"application/vnd.ms-cab-compressed\",\n  can: \"application/candor\",\n  cc: \"text/x-c++src\",\n  chm: \"application/vnd.ms-htmlhelp\",\n  \"class\": \"application/octet-stream\",\n  com: \"application/x-msdownload\",\n  conf: \"text/plain\",\n  cpp: \"text/x-c\",\n  crt: \"application/x-x509-ca-cert\",\n  css: \"text/css\",\n  csv: \"text/csv\",\n  cxx: \"text/x-c\",\n  deb: \"application/x-debian-package\",\n  der: \"application/x-x509-ca-cert\",\n  diff: \"text/x-diff\",\n  djv: \"image/vnd.djvu\",\n  djvu: \"image/vnd.djvu\",\n  dll: \"application/x-msdownload\",\n  dmg: \"application/octet-stream\",\n  doc: \"application/msword\",\n  dot: \"application/msword\",\n  dtd: \"application/xml-dtd\",\n  dvi: \"application/x-dvi\",\n  ear: \"application/java-archive\",\n  eml: \"message/rfc822\",\n  eps: \"application/postscript\",\n  exe: \"application/x-msdownload\",\n  f: \"text/x-fortran\",\n  f77: \"text/x-fortran\",\n  f90: \"text/x-fortran\",\n  flv: \"video/x-flv\",\n  \"for\": \"text/x-fortran\",\n  gem: \"application/octet-stream\",\n  gemspec: \"text/x-script.ruby\",\n  gif: \"image/gif\",\n  gyp: \"text/x-script.python\",\n  gypi: \"text/x-script.python\",\n  gz: \"application/x-gzip\",\n  h: \"text/x-chdr\",\n  hh: \"text/x-c++hdr\",\n  htm: \"text/html\",\n  html: \"text/html\",\n  ico: \"image/vnd.microsoft.icon\",\n  ics: \"text/calendar\",\n  ifb: \"text/calendar\",\n  iso: \"application/octet-stream\",\n  jar: \"application/java-archive\",\n  java: \"text/x-java-source\",\n  jnlp: \"application/x-java-jnlp-file\",\n  jpeg: \"image/jpeg\",\n  jpg: \"image/jpeg\",\n  js: \"application/javascript\",\n  json: \"application/json\",\n  less: \"text/css\",\n  log: \"text/plain\",\n  lua: \"text/x-script.lua\",\n  luac: \"application/x-bytecode.lua\",\n  makefile: \"text/x-makefile\",\n  m3u: \"audio/x-mpegurl\",\n  m4v: \"video/mp4\",\n  man: \"text/troff\",\n  manifest: \"text/cache-manifest\",\n  markdown: \"text/x-markdown\",\n  mathml: \"application/mathml+xml\",\n  mbox: \"application/mbox\",\n  mdoc: \"text/troff\",\n  md: \"text/x-markdown\",\n  me: \"text/troff\",\n  mid: \"audio/midi\",\n  midi: \"audio/midi\",\n  mime: \"message/rfc822\",\n  mml: \"application/mathml+xml\",\n  mng: \"video/x-mng\",\n  mov: \"video/quicktime\",\n  mp3: \"audio/mpeg\",\n  mp4: \"video/mp4\",\n  mp4v: \"video/mp4\",\n  mpeg: \"video/mpeg\",\n  mpg: \"video/mpeg\",\n  ms: \"text/troff\",\n  msi: \"application/x-msdownload\",\n  odp: \"application/vnd.oasis.opendocument.presentation\",\n  ods: \"application/vnd.oasis.opendocument.spreadsheet\",\n  odt: \"application/vnd.oasis.opendocument.text\",\n  ogg: \"application/ogg\",\n  p: \"text/x-pascal\",\n  pas: \"text/x-pascal\",\n  pbm: \"image/x-portable-bitmap\",\n  pdf: \"application/pdf\",\n  pem: \"application/x-x509-ca-cert\",\n  pgm: \"image/x-portable-graymap\",\n  pgp: \"application/pgp-encrypted\",\n  pkg: \"application/octet-stream\",\n  pl: \"text/x-script.perl\",\n  pm: \"text/x-script.perl-module\",\n  png: \"image/png\",\n  pnm: \"image/x-portable-anymap\",\n  ppm: \"image/x-portable-pixmap\",\n  pps: \"application/vnd.ms-powerpoint\",\n  ppt: \"application/vnd.ms-powerpoint\",\n  ps: \"application/postscript\",\n  psd: \"image/vnd.adobe.photoshop\",\n  py: \"text/x-script.python\",\n  qt: \"video/quicktime\",\n  ra: \"audio/x-pn-realaudio\",\n  rake: \"text/x-script.ruby\",\n  ram: \"audio/x-pn-realaudio\",\n  rar: \"application/x-rar-compressed\",\n  rb: \"text/x-script.ruby\",\n  rdf: \"application/rdf+xml\",\n  roff: \"text/troff\",\n  rpm: \"application/x-redhat-package-manager\",\n  rss: \"application/rss+xml\",\n  rtf: \"application/rtf\",\n  ru: \"text/x-script.ruby\",\n  s: \"text/x-asm\",\n  sgm: \"text/sgml\",\n  sgml: \"text/sgml\",\n  sh: \"application/x-sh\",\n  sig: \"application/pgp-signature\",\n  snd: \"audio/basic\",\n  so: \"application/octet-stream\",\n  svg: \"image/svg+xml\",\n  svgz: \"image/svg+xml\",\n  swf: \"application/x-shockwave-flash\",\n  t: \"text/troff\",\n  tar: \"application/x-tar\",\n  tbz: \"application/x-bzip-compressed-tar\",\n  tci: \"application/x-topcloud\",\n  tcl: \"application/x-tcl\",\n  tex: \"application/x-tex\",\n  texi: \"application/x-texinfo\",\n  texinfo: \"application/x-texinfo\",\n  text: \"text/plain\",\n  tif: \"image/tiff\",\n  tiff: \"image/tiff\",\n  torrent: \"application/x-bittorrent\",\n  tr: \"text/troff\",\n  ts: \"application/x-typescript\",\n  ttf: \"application/x-font-ttf\",\n  txt: \"text/plain\",\n  vcf: \"text/x-vcard\",\n  vcs: \"text/x-vcalendar\",\n  vrml: \"model/vrml\",\n  war: \"application/java-archive\",\n  wav: \"audio/x-wav\",\n  webapp: \"application/x-web-app-manifest+json\",\n  webm: \"video/webm\",\n  wma: \"audio/x-ms-wma\",\n  wmv: \"video/x-ms-wmv\",\n  wmx: \"video/x-ms-wmx\",\n  wrl: \"model/vrml\",\n  wsdl: \"application/wsdl+xml\",\n  xbm: \"image/x-xbitmap\",\n  xhtml: \"application/xhtml+xml\",\n  xls: \"application/vnd.ms-excel\",\n  xml: \"application/xml\",\n  xpm: \"image/x-xpixmap\",\n  xsl: \"application/xml\",\n  xslt: \"application/xslt+xml\",\n  yaml: \"text/yaml\",\n  yml: \"text/yaml\",\n  zip: \"application/zip\"\n};\n","export function pathJoin(base, ...parts) {\n  parts = (base + \"/\" + parts.join(\"/\")).split(/\\/+/);\n  let i = 0;\n  while (i < parts.length) {\n    let part = parts[i];\n    if (!part || part === '.') parts.splice(i, 1);\n    else if (part !== '..') i++;\n    else {\n      parts.splice(i - 1, 2);\n      i--;\n      if (i < 0) i = 0;\n    }\n  }\n  return (base[0] === '/' ? '/' : '') + parts.join(\"/\");\n}\n","// TYPES:\n//   bin - a Uint8Array containing binary data.\n//   str - a normal unicode string.\n//   raw - a string where each character's charCode is a byte value. (utf-8)\n//   hex - a string holding binary data as lowercase hexadecimal.\n//   b64 - a string holding binary data in base64 encoding.\n\n// Make working with Uint8Array less painful in node.js\nUint8Array.prototype.inspect = function () {\n  let str = '';\n  for (let i = 0; i < this.length; i++) {\n    if (i >= 50) { str += '...'; break; }\n    str += (this[i] < 0x10 ? ' 0' : ' ') + this[i].toString(16);\n  }\n  return '<Uint8Array' + str + '>';\n}\n\n// Convert a raw string into a Uint8Array\nexport function rawToBin(raw, start, end) {\n  raw = '' + raw;\n  start = start == null ? 0 : start | 0;\n  end = end == null ? raw.length : end | 0;\n  let len = end - start;\n  let bin = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bin[i] = raw.charCodeAt(i + start);\n  }\n  return bin;\n}\n\nexport function binToRaw(bin, start, end) {\n  if (!(bin instanceof Uint8Array)) bin = new Uint8Array(bin);\n  start = start == null ? 0 : start | 0;\n  end = end == null ? bin.length : end | 0;\n  let raw = '';\n  for (let i = start || 0; i < end; i++) {\n    raw += String.fromCharCode(bin[i]);\n  }\n  return raw;\n}\n\nexport function binToHex(bin, start, end) {\n  if (!(bin instanceof Uint8Array)) bin = new Uint8Array(bin);\n  start = start == null ? 0 : start | 0;\n  end = end == null ? bin.length : end | 0;\n  let hex = '';\n  for (let i = start; i < end; i++) {\n    let byte = bin[i];\n    hex += (byte < 0x10 ? '0' : '') + byte.toString(16);\n  }\n  return hex;\n}\n\nexport function hexToBin(hex, start, end) {\n  hex = '' + hex;\n  start = start == null ? 0 : start | 0;\n  end = end == null ? hex.length : end | 0;\n  let len = (end - start) >> 1;\n  let bin = new Uint8Array(len);\n  let offset = 0;\n  for (let i = start; i < end; i += 2) {\n    bin[offset++] = parseInt(hex.substr(i, 2), 16);\n  }\n  return bin;\n}\n\nexport function strToRaw(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nexport function rawToStr(raw) {\n  return decodeURIComponent(escape(raw));\n}\n\nconst codes =\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n// Reverse map from character code to 6-bit integer\nlet map = [];\nfor (let i = 0, l = codes.length; i < l; i++) {\n  map[codes.charCodeAt(i)] = i;\n}\n\n// Loop over input 3 bytes at a time\n// a,b,c are 3 x 8-bit numbers\n// they are encoded into groups of 4 x 6-bit numbers\n// aaaaaa aabbbb bbbbcc cccccc\n// if there is no c, then pad the 4th with =\n// if there is also no b then pad the 3rd with =\nexport function binToB64(bin) {\n  let b64 = \"\";\n  for (let i = 0, l = bin.length; i < l; i += 3) {\n    let a = bin[i],\n        b = i + 1 < l ? bin[i + 1] : -1,\n        c = i + 2 < l ? bin[i + 2] : -1;\n    b64 +=\n      // Higher 6 bits of a\n      codes[a >> 2] +\n      // Lower 2 bits of a + high 4 bits of b\n      codes[((a & 3) << 4) | (b >= 0 ? b >> 4 : 0)] +\n      // Low 4 bits of b + High 2 bits of c\n      (b >= 0 ? codes[((b & 15) << 2) | (c >= 0 ? c >> 6 : 0)] : \"=\") +\n      // Lower 6 bits of c\n      (c >= 0 ? codes[c & 63] : \"=\");\n  }\n  return b64;\n}\n\n// loop over input 4 characters at a time\n// The characters are mapped to 4 x 6-bit integers a,b,c,d\n// They need to be reassembled into 3 x 8-bit bytes\n// aaaaaabb bbbbcccc ccdddddd\n// if d is padding then there is no 3rd byte\n// if c is padding then there is no 2nd byte\nexport function b64ToBin(b64) {\n  let bytes = [];\n  let j = 0;\n  for (let i = 0, l = b64.length; i < l; i += 4) {\n    let a = map[b64.charCodeAt(i)];\n    let b = map[b64.charCodeAt(i + 1)];\n    let c = map[b64.charCodeAt(i + 2)];\n    let d = map[b64.charCodeAt(i + 3)];\n\n    // higher 6 bits are the first char\n    // lower 2 bits are upper 2 bits of second char\n    bytes[j] = (a << 2) | (b >> 4);\n\n    // if the third char is not padding, we have a second byte\n    if (c < 64) {\n      // high 4 bits come from lower 4 bits in b\n      // low 4 bits come from high 4 bits in c\n      bytes[j + 1] = ((b & 0xf) << 4) | (c >> 2);\n\n      // if the fourth char is not padding, we have a third byte\n      if (d < 64) {\n        // Upper 2 bits come from Lower 2 bits of c\n        // Lower 6 bits come from d\n        bytes[j + 2] = ((c & 3) << 6) | d;\n      }\n    }\n    j = j + 3;\n  }\n  return new Uint8Array(bytes);\n}\n\nexport function strToBin(str) {\n  return rawToBin(strToRaw(str));\n}\n\nexport function binToStr(bin, start, end) {\n  return rawToStr(binToRaw(bin, start, end));\n}\n\nexport function rawToHex(raw, start, end) {\n  return binToHex(rawToBin(raw, start, end));\n}\n\nexport function hexToRaw(hex) {\n  return binToRaw(hexToBin(hex));\n}\n\nexport function strToHex(str) {\n  return binToHex(strToBin(str));\n}\n\nexport function hexToStr(hex) {\n  return binToStr(hexToBin(hex));\n}\n\nexport function b64ToStr(b64) {\n  return binToStr(b64ToBin(b64));\n}\n\nexport function strToB64(str) {\n  return binToB64(strToBin(str));\n}\n\nexport function b64ToHex(b64) {\n  return binToHex(b64ToBin(b64));\n}\n\nexport function hexToB64(hex) {\n  return binToB64(hexToBin(hex));\n}\n\nexport function b64ToRaw(b64) {\n  return binToRaw(b64ToBin(b64));\n}\n\nexport function rawToB64(raw, start, end) {\n  return binToB64(rawToBin(raw, start, end));\n}\n\n\n// This takes nested lists of numbers, strings and array buffers and returns\n// a single buffer.  Numbers represent single bytes, strings are raw 8-bit\n// strings, and buffers represent themselves.\n// EX:\n//    1           -> <01>\n//    \"Hi\"        -> <48 69>\n//    [1, \"Hi\"]   -> <01 48 69>\n//    [[1],2,[3]] -> <01 02 03>\nexport function flatten(parts) {\n  if (typeof parts === \"number\") return new Uint8Array([parts]);\n  if (parts instanceof Uint8Array) return parts;\n  let buffer = new Uint8Array(count(parts));\n  copy(buffer, 0, parts);\n  return buffer;\n}\n\nfunction count(value) {\n  if (value == null) return 0;\n  if (typeof value === \"number\") return 1;\n  if (typeof value === \"string\") return value.length;\n  if (value instanceof Uint8Array) return value.length;\n  if (!Array.isArray(value)) {\n    throw new TypeError(\"Bad type for flatten: \" + typeof value);\n  }\n  let sum = 0;\n  for (let piece of value) {\n    sum += count(piece);\n  }\n  return sum;\n}\n\nfunction copy(buffer, offset, value) {\n  if (value == null) return offset;\n  if (typeof value === \"number\") {\n    buffer[offset++] = value;\n    return offset;\n  }\n  if (typeof value === \"string\") {\n    for (let i = 0, l = value.length; i < l; i++) {\n      buffer[offset++] = value.charCodeAt(i);\n    }\n    return offset;\n  }\n  if (value instanceof ArrayBuffer) {\n    value = new Uint8Array(value);\n  }\n  for (let piece of value) {\n    offset = copy(buffer, offset, piece);\n  }\n  return offset;\n}\n\n\n// indexOf for arrays/buffers.  Raw is a string in raw encoding.\n// returns -1 when not found.\n// start and end are indexes into buffer.  Default is 0 and length.\nexport function indexOf(bin, raw, start, end) {\n  start = start == null ? 0 : start | 0;\n  end = end == null ? bin.length : end | 0;\n  outer: for (let i = start || 0; i < end; i++) {\n    for (let j = 0, l = raw.length; j < l; j++) {\n      if (i + j >= end || bin[i + j] !== raw.charCodeAt(j)) {\n        continue outer;\n      }\n    }\n    return i;\n  }\n  return -1;\n}\n","import { flatten, strToBin, binToStr } from \"./bintools\"\n\nlet extensions = [];\nlet extdex = {};\n\nexport function register(code, Constructor, encoder, decoder) {\n  extensions.push(extdex[code] = {\n    code: code,\n    Constructor: Constructor,\n    encoder: encoder,\n    decoder: decoder\n  });\n}\nfunction uint8(num) {\n  return (num>>>0) & 0xff;\n}\n\nfunction uint16(num) {\n  num = (num>>>0) & 0xffff;\n  return [\n    num >> 8,\n    num & 0xff\n  ];\n}\nfunction uint32(num) {\n  num >>>= 0;\n  return [\n    num >> 24,\n    (num >> 16) & 0xff,\n    (num >> 8) & 0xff,\n    num & 0xff\n  ];\n}\nfunction uint64(value) {\n  if (value < 0) value += 0x10000000000000000;\n  return [\n    uint32(value / 0x100000000),\n    uint32(value % 0x100000000)\n  ];\n}\n\n\nexport function encode(value) {\n  return flatten(realEncode(value));\n}\n\nfunction pairMap(key) {\n  return [\n    realEncode(key),\n    realEncode(this[key])\n  ];\n}\n\n\nfunction tooLong(len, value) {\n  throw new TypeError(\"Value is too long: \" + (typeof value) + \"/\" + len);\n}\n\nfunction realEncode(value) {\n  // nil format family\n  if (value == null) return 0xc0;\n\n  // bool format family\n  if (value === false) return 0xc2;\n  if (value === true) return 0xc3\n\n  if (typeof value === \"number\") {\n    // int format family\n    if (Math.floor(value) === value) {\n      // Positive integers\n      if (value >= 0) {\n        if (value < 0x80) return value;\n        if (value < 0x100) return [0xcc, value];\n        if (value < 0x10000) return [0xcd, uint16(value)];\n        if (value < 0x100000000) return [0xce, uint32(value)];\n        if (value < 0x10000000000000000) return [0xcf, uint64(value)];\n        tooLong(value, value);\n      }\n      // Negative integers\n      if (value > -0x20) return value + 0x100;\n      if (value >= -0x80) return [0xd0, uint8(value)];\n      if (value >= -0x8000) return [0xd1, uint16(value)];\n      if (value >= -0x80000000) return [0xd2, uint32(value)];\n      if (value >= -0x8000000000000000) return [0xd3, uint64(value)];\n      tooLong(value, value);\n    }\n\n    // float format family\n    else {\n      // All numbers in JS are double, so just assume that when encoding.\n      let buf = new Uint8Array(8);\n      new DataView(buf).setFloat64(0, value, false);\n      return [0xcb, buf];\n    }\n  }\n\n  // str format family\n  if (value.constructor === String) {\n    value = strToBin(value);\n    let len = value.length;\n    if (len < 0x20) return [0xa0|len, value];\n    if (len < 0x100) return [0xd9, len, value];\n    if (len < 0x10000) return [0xda, uint16(len), value];\n    if (len < 0x100000000) return [0xdb, uint32(len), value];\n    tooLong(len, value);\n  }\n\n  // bin format family\n  if (value.constructor === ArrayBuffer) value = new Uint8Array(value);\n  if (value.constructor === Uint8Array) {\n    let len = value.length;\n    if (len < 0x100) return [0xc4, len, value];\n    if (len < 0x10000) return [0xc5, uint16(len), value];\n    if (len < 0x100000000) return [0xc6, uint32(len), value];\n    tooLong(len, value);\n  }\n\n  // array format family\n  if (Array.isArray(value)) {\n    let len = value.length;\n    if (len < 0x10) return [0x90|len, value.map(realEncode)];\n    if (len < 0x10000) return [0xdc, uint16(len), value.map(realEncode)];\n    if (len < 0x100000000) return [0xdd, uint32(len), value.map(realEncode)];\n    tooLong(len, value);\n  }\n\n  // map format family\n  if (value.constructor === Object) {\n    let keys = Object.keys(value);\n    let len = keys.length;\n    if (len < 0x10) return [0x80|len, keys.map(pairMap, value)];\n    if (len < 0x10000) return [0xde, len, keys.map(pairMap, value)];\n    if (len < 0x100000000) return [0xdf, len, keys.map(pairMap, value)];\n    tooLong(len, value);\n  }\n\n  // ext format family\n  for (let ext of extensions) {\n    if (value.constructor === ext.Constructor) {\n      let buf = ext.encoder(value);\n      let len = buf.length;\n      if (len === 1) return [0xd4, ext.code, buf];\n      if (len === 2) return [0xd5, ext.code, buf];\n      if (len === 4) return [0xd6, ext.code, buf];\n      if (len === 8) return [0xd7, ext.code, buf];\n      if (len === 16) return [0xd8, ext.code, buf];\n      if (len < 0x100) return [0xc7, len, ext.code, buf];\n      if (len < 0x10000) return [0xc8, uint16(len), ext.code, buf];\n      if (len < 0x100000000) return [0xc8, uint32(len), ext.code, buf];\n      tooLong(len, value);\n    }\n  }\n\n  throw new TypeError(\n    \"Unknown type: \" + Object.prototype.toString.call(value) +\n    \"\\nPerhaps register it as a custom type?\");\n}\n\nexport function decode(buf) {\n  let offset = 0,\n      buffer = buf;\n  return realDecode();\n\n  function readMap(len) {\n    let obj = {};\n    while (len-- > 0) {\n      obj[realDecode()] = realDecode();\n    }\n    return obj;\n  }\n\n  function readArray(len) {\n    let arr = new Array(len);\n    for (let i = 0; i < len; i++) {\n      arr[i] = realDecode();\n    }\n    return arr;\n  }\n\n  function readString(len) {\n    var str = binToStr(buffer, offset, offset + len);\n    offset += len;\n    return str;\n  }\n\n  function readBin(len) {\n    let buf = buffer.slice(offset, offset + len);\n    offset += len;\n    return buf;\n  }\n\n  function readExt(len, type) {\n    let buf = buffer.slice(offset, offset + len);\n    offset += len;\n    let ext = extdex[type];\n    return ext.decoder(buf);\n  }\n\n  function read8() {\n    return (buffer[offset++]) >>> 0;\n  }\n\n  function read16() {\n    return (\n      buffer[offset++] << 8 |\n      buffer[offset++]\n    ) >>> 0;\n  }\n\n  function read32() {\n    return (\n      buffer[offset++] << 24 |\n      buffer[offset++] << 16 |\n      buffer[offset++] << 8 |\n      buffer[offset++]\n    ) >>> 0;\n  }\n\n  function read64() {\n    return read32() * 0x100000000 +\n           read32();\n  }\n\n  function readFloat() {\n    let num = new DataView(buffer).getFloat32(offset, false);\n    offset += 4;\n    return num;\n  }\n\n  function readDouble() {\n    let num = new DataView(buffer).getFloat64(offset, false);\n    offset += 8;\n    return num;\n  }\n\n  function realDecode() {\n    if (offset >= buffer.length) {\n      throw new Error(\"Unexpected end of msgpack buffer\");\n    }\n    let first = buffer[offset++];\n    // positive fixint\n    if (first < 0x80) return first;\n    // fixmap\n    if (first < 0x90) return readMap(first & 0xf);\n    // fixarray\n    if (first < 0xa0) return readArray(first & 0xf);\n    // fixstr\n    if (first < 0xc0) return readString(first & 0x1f);\n    // negative fixint\n    if (first >= 0xe0) return first - 0x100;\n    switch (first) {\n      // nil\n      case 0xc0: return null;\n      // false\n      case 0xc2: return false;\n      // true\n      case 0xc3: return true;\n      // bin 8\n      case 0xc4: return readBin(read8());\n      // bin 16\n      case 0xc5: return readBin(read16());\n      // bin 32\n      case 0xc6: return readBin(read32());\n      // ext 8\n      case 0xc7: return readExt(read8(), read8());\n      // ext 16\n      case 0xc8: return readExt(read16(), read8());\n      // ext 32\n      case 0xc9: return readExt(read32(), read8());\n      // float 32\n      case 0xca: return readFloat();\n      // float 64\n      case 0xcb: return readDouble();\n      // uint 8\n      case 0xcc: return read8();\n      // uint 16\n      case 0xcd: return read16();\n      // uint 32\n      case 0xce: return read32();\n      // uint 64\n      case 0xcf: return read64();\n      // int 8\n      case 0xd0: return read8() - 0x100;\n      // int 16\n      case 0xd1: return read16() - 0x10000;\n      // int 32\n      case 0xd2: return read32() - 0x100000000;\n      // int 64\n      case 0xd3: return read64() - 0x10000000000000000;\n      // fixext 1\n      case 0xd4: return readExt(1, read8());\n      // fixext 2\n      case 0xd5: return readExt(2, read8());\n      // fixext 4\n      case 0xd6: return readExt(4, read8());\n      // fixext 8\n      case 0xd7: return readExt(8, read8());\n      // fixext 16\n      case 0xd8: return readExt(16, read8());\n      // str 8\n      case 0xd9: return readString(read8());\n      // str 16\n      case 0xda: return readString(read16());\n      // str 32\n      case 0xdb: return readString(read32());\n      // array 16\n      case 0xdc: return readArray(read16());\n      // array 32\n      case 0xdd: return readArray(read32());\n      // map 16\n      case 0xde: return readMap(read16());\n      // map 32\n      case 0xdf: return readMap(read32());\n\n      default: throw new Error(\"Unexpected byte: \" + first.toString(16));\n    }\n  }\n\n}\n","import { register, encode, decode } from \"./msgpack\";\nimport { sha1 } from \"./sha1\";\n\n// Consumers of this API must provide the following interface here.\n// function get(hash) -> promise<value>\n// function set(hash, value) -> promise\nexport let storage = {};\n\n// Register the Link type so we can serialize hashes as a new special type.\n// hash itself is just a 20 byte Uint8Array\nregister(127, Link,\n  (link) => { return link.hash; },\n  (buf) => { return new Link(buf); }\n);\n\n// Save takes a value and serializes and stores it returning the link.\nexport function* save(value) {\n  let buf = encode(value);\n  let hex = sha1(buf);\n  yield storage.set(hex, buf);\n  return new Link(hex);\n}\n\n// Load accepts a link or a string hash as input.\nexport function* load(link) {\n  let hex = typeof link === \"string\" ?\n    link : link.toHex();\n  return decode(yield storage.get(hex));\n}\n\n// Link has some nice methods in addition to storing the hash buffer.\nexport function Link(hash) {\n  if (hash.constructor === ArrayBuffer) {\n    hash = new Uint8Array(hash);\n  }\n  if (hash.constructor === Uint8Array) {\n    this.hash = hash;\n    return;\n  }\n  if (typeof hash === \"string\") {\n    if (!/^[0-9a-f]{40}$/.test(hash)) {\n      throw new TypeError(\"Invalid string, expected hash\");\n    }\n    this.hash = new Uint8Array(20);\n    let j = 0;\n    for (let i = 0; i < 40; i += 2) {\n      this.hash[j++] = parseInt(hash.substr(i, 2), 16);\n    }\n    return;\n  }\n  throw new TypeError(\"Invalid hash, expected string or buffer\");\n}\nLink.prototype.resolve = function* resolve() {\n  return yield* load(this);\n};\nLink.prototype.toHex = function toHex() {\n  let hex = \"\";\n  let buf = this.hash;\n  for (let i = 0, l = buf.length; i < l; i++) {\n    let byte = buf[i];\n    hex += (byte < 0x10 ? \"0\" : \"\") + byte.toString(16);\n  }\n  if (!hex) throw new Error(\"WAT\")\n  return hex;\n};\n\n// Look for links in an object\nexport function scan(value, onLink) {\n  if (value.constructor === Link) {\n    onLink(value);\n  }\n  else if (Array.isArray(value)) {\n    for (let item of value) scan(item, onLink);\n  }\n  else if (value.constructor === Object) {\n    for (let key in value) {\n      scan(value[key], onLink);\n    }\n  }\n}\n","\nlet db;\n\nfunction getDB() {\n  if (!db) {\n    db = new Promise(function(resolve, reject) {\n      let openreq = indexedDB.open('keyval-store', 1);\n\n      openreq.onerror = function() {\n        reject(openreq.error);\n      };\n\n      openreq.onupgradeneeded = function() {\n        // First time setup: create an empty object store\n        openreq.result.createObjectStore('keyval');\n      };\n\n      openreq.onsuccess = function() {\n        resolve(openreq.result);\n      };\n    });\n  }\n  return db;\n}\n\nfunction withStore(type, callback) {\n  return getDB().then(function(db) {\n    return new Promise(function(resolve, reject) {\n      let transaction = db.transaction('keyval', type);\n      transaction.oncomplete = function() {\n        resolve();\n      };\n      transaction.onerror = function() {\n        reject(transaction.error);\n      };\n      callback(transaction.objectStore('keyval'));\n    });\n  });\n}\n\nexport let idbKeyval = {\n  get: function(key) {\n    let req;\n    return withStore('readonly', function(store) {\n      req = store.get(key);\n    }).then(function() {\n      return req.result;\n    });\n  },\n  set: function(key, value) {\n    return withStore('readwrite', function(store) {\n      store.put(value, key);\n    });\n  },\n  delete: function(key) {\n    return withStore('readwrite', function(store) {\n      store.delete(key);\n    });\n  },\n  clear: function() {\n    return withStore('readwrite', function(store) {\n      store.clear();\n    });\n  },\n  keys: function() {\n    let keys = [];\n    return withStore('readonly', function(store) {\n      // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n      // And openKeyCursor isn't supported by Safari.\n      (store.openKeyCursor || store.openCursor).call(store).onsuccess = function() {\n        if (!this.result) return;\n        keys.push(this.result.key);\n        this.result.continue();\n      };\n    }).then(function() {\n      return keys;\n    });\n  }\n};\n","import { Link, load, save, storage } from \"./link\";\nimport { idbKeyval  } from \"./idb-keyval\";\nexport { Link, load, save, storage }\n\n// Hook up link's storage to use idbKeyval\nstorage.get = idbKeyval.get;\nstorage.set = idbKeyval.set;\nstorage.clear = idbKeyval.clear;\n","import { run } from \"./libs/async\";\nimport { guess } from \"./libs/mime\";\nimport { pathJoin } from \"./libs/pathjoin\";\nimport { Link } from \"./libs/cas-idb\"\n\nconst CACHE_NAME = 'v1';\nconst routePattern = /^https?:\\/\\/[^\\/]+\\/([0-9a-f]{40})(\\/.*)$/;\n\nfunction wrap(gen) {\n  return function (event) {\n    event.waitUntil(run(gen(event)));\n  };\n}\n\nself.addEventListener('install', wrap(function* () {\n  let cache = yield caches.open(CACHE_NAME);\n  yield cache.addAll([\n    '/',\n    '/main.js',\n    '/worker.js',\n    '/maquette.min.js',\n    '/css/dark-theme.css',\n    '/css/style.css',\n    '/css/revision-icons.css'\n  ]);\n  yield self.skipWaiting();\n}));\n\nself.addEventListener('activate', wrap(function* () {\n  yield self.clients.claim();\n}));\n\n\nself.addEventListener('fetch', function (event) {\n  return event.respondWith(run(function* () {\n    let match = event.request.url.match(routePattern);\n    if (!match) return yield* passthrough(event);\n    let root = new Link(match[1]),\n        path = match[2];\n    return yield* serve(root, path);\n\n  }()));\n});\n\nfunction* passthrough(event) {\n  let cache = yield caches.open(CACHE_NAME);\n  let response = yield cache.match(event.request);\n  if (!response) {\n    response = yield fetch(event.request.clone());\n    if(response && response.status === 200 && response.type === 'basic') {\n      var responseToCache = response.clone();\n      yield cache.put(event.request, responseToCache);\n    }\n  }\n  return response;\n}\n\nfunction* serve(root, path) {\n  let node = yield* root.resolve();\n  let part;\n  for (part of path.split('/')) {\n    if (!part) continue;\n    node = node[part];\n    if (!node) {\n      return new Response(`No such path: ${path}`);\n    }\n  }\n\n  // Serve files directly with guessed mime-type\n  if (node instanceof Link) {\n    // Render file\n    let body = yield* node.resolve();\n    return new Response(body, {\n      headers: {\n        'Content-Type': guess(path),\n        'Content-Disposition': `inline; filename=\"${part}\"`\n      }\n    });\n  }\n\n  // Resolve symlinks by redirecting internally to target.\n  if (typeof node === \"string\") {\n    return yield* serve(root, pathJoin(path, \"..\", node));\n  }\n\n  // Render HTML directory for trees.\n  let html = `<h1>${path}</h1>`;\n  html += \"<ul>\";\n  for (let name in node) {\n    let newPath = path + (path[path.length - 1] === '/' ? '' : '/') + name;\n    let entry = node[name];\n    if (entry.constructor === Object) {\n      newPath += \"/\";\n    }\n    let href = `/${root.toHex()}${newPath}`;\n    html += `<li><a href=\"${href}\">${name}</a></li>`;\n  }\n  html += \"</ul>\";\n\n  return new Response(html, {\n    headers: { 'Content-Type': 'text/html' }\n  });\n}\n"],"names":[],"mappings":"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"}