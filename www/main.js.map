{"version":3,"file":"main.js","sources":["../src/async.js","../src/flatten.js","../src/msgpack.js","../src/link.js","../src/idb-keyval.js","../src/sha1.js","../src/cas.js","../src/github.js","../src/dombuilder.js","../src/mime.js","../src/main.js"],"sourcesContent":["\n// Usage: async(function* (...args) { yield promise... })(..args) -> Promise\nexport function async(gen) {\n  return function (...args) {\n    return run(gen(...args));\n  };\n}\n// Usage: run(iter) -> Promise\nexport function run(iter) {\n  try { return handle(iter.next()); }\n  catch (ex) { return Promise.reject(ex); }\n  function handle(result){\n    if (result.done) return Promise.resolve(result.value);\n    return Promise.resolve(result.value).then(function (res) {\n      return handle(iter.next(res));\n    }).catch(function (err) {\n      return handle(iter.throw(err));\n    });\n  }\n}\n\nexport function runAll(iters) {\n  return Promise.all(iters.map(run));\n}\n","export function flatten(parts) {\n  if (typeof parts === \"number\") return new Uint8Array([parts]);\n  if (parts instanceof Uint8Array) return parts;\n  if (!Array.isArray(parts)) {\n    throw new TypeError(\"Bad type for flatten: \" + typeof parts);\n  }\n  let buffer = new Uint8Array(count(parts));\n  copy(buffer, 0, parts);\n  return buffer;\n}\n\nfunction count(value) {\n  if (typeof value === \"number\") return 1;\n  let sum = 0;\n  for (let piece of value) {\n    sum += count(piece);\n  }\n  return sum;\n}\n\nfunction copy(buffer, offset, value) {\n  if (typeof value === \"number\") {\n    buffer[offset++] = value;\n    return offset;\n  }\n  if (value instanceof ArrayBuffer) {\n    value = new Uint8Array(value);\n  }\n  for (let piece of value) {\n    offset = copy(buffer, offset, piece);\n  }\n  return offset;\n}\n\nexport function memcpy(dst, dstOffset, src, srcOffset, length) {\n  var dstU8 = new Uint8Array(dst, dstOffset, length);\n  var srcU8 = new Uint8Array(src, srcOffset, length);\n  dstU8.set(srcU8);\n}\n","import { flatten } from \"./flatten\"\n\nlet extensions = [];\nlet extdex = {};\n\nexport function register(code, Constructor, encoder, decoder) {\n  extensions.push(extdex[code] = {\n    code: code,\n    Constructor: Constructor,\n    encoder: encoder,\n    decoder: decoder\n  });\n}\nfunction uint8(num) {\n  return (num>>>0) & 0xff;\n}\n\nfunction uint16(num) {\n  num = (num>>>0) & 0xffff;\n  return [\n    num >> 8,\n    num & 0xff\n  ];\n}\nfunction uint32(num) {\n  num >>>= 0;\n  return [\n    num >> 24,\n    (num >> 16) & 0xff,\n    (num >> 8) & 0xff,\n    num & 0xff\n  ];\n}\nfunction uint64(value) {\n  if (value < 0) value += 0x10000000000000000;\n  return [\n    uint32(value / 0x100000000),\n    uint32(value % 0x100000000)\n  ];\n}\n\n\nexport function encode(value) {\n  return flatten(realEncode(value));\n}\n\nfunction pairMap(key) {\n  return [\n    realEncode(key),\n    realEncode(this[key])\n  ];\n}\n\nfunction encode_utf8(s) {\n  return unescape(encodeURIComponent(s));\n}\nfunction decode_utf8(s) {\n  return decodeURIComponent(escape(s));\n}\nfunction stringToBuffer(str) {\n  return rawToBuffer(encode_utf8(str));\n}\nfunction rawToBuffer(raw) {\n  let len = raw.length;\n  let buf = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    buf[i] = raw.charCodeAt(i);\n  }\n  return buf;\n}\n\nfunction tooLong(len, value) {\n  throw new TypeError(\"Value is too long: \" + (typeof value) + \"/\" + len);\n}\n\nfunction realEncode(value) {\n  // nil format family\n  if (value == null) return 0xc0;\n\n  // bool format family\n  if (value === false) return 0xc2;\n  if (value === true) return 0xc3\n\n  if (typeof value === \"number\") {\n    // int format family\n    if (Math.floor(value) === value) {\n      // Positive integers\n      if (value >= 0) {\n        if (value < 0x80) return value;\n        if (value < 0x100) return [0xcc, value];\n        if (value < 0x10000) return [0xcd, uint16(value)];\n        if (value < 0x100000000) return [0xce, uint32(value)];\n        if (value < 0x10000000000000000) return [0xcf, uint64(value)];\n        tooLong(value, value);\n      }\n      // Negative integers\n      if (value > -0x20) return value + 0x100;\n      if (value >= -0x80) return [0xd0, uint8(value)];\n      if (value >= -0x8000) return [0xd1, uint16(value)];\n      if (value >= -0x80000000) return [0xd2, uint32(value)];\n      if (value >= -0x8000000000000000) return [0xd3, uint64(value)];\n      tooLong(value, value);\n    }\n\n    // float format family\n    else {\n      // All numbers in JS are double, so just assume that when encoding.\n      let buf = new Uint8Array(8);\n      new DataView(buf).setFloat64(0, value, false);\n      return [0xcb, buf];\n    }\n  }\n\n  // str format family\n  if (value.constructor === String) {\n    value = stringToBuffer(value);\n    let len = value.length;\n    if (len < 0x20) return [0xa0|len, value];\n    if (len < 0x100) return [0xd9, len, value];\n    if (len < 0x10000) return [0xda, uint16(len), value];\n    if (len < 0x100000000) return [0xdb, uint32(len), value];\n    tooLong(len, value);\n  }\n\n  // bin format family\n  if (value.constructor === ArrayBuffer) value = new Uint8Array(value);\n  if (value.constructor === Uint8Array) {\n    let len = value.length;\n    if (len < 0x100) return [0xc4, len, value];\n    if (len < 0x10000) return [0xc5, uint16(len), value];\n    if (len < 0x100000000) return [0xc6, uint32(len), value];\n    tooLong(len, value);\n  }\n\n  // array format family\n  if (Array.isArray(value)) {\n    let len = value.length;\n    if (len < 0x10) return [0x90|len, value.map(realEncode)];\n    if (len < 0x10000) return [0xdc, uint16(len), value.map(realEncode)];\n    if (len < 0x100000000) return [0xdd, uint32(len), value.map(realEncode)];\n    tooLong(len, value);\n  }\n\n  // map format family\n  if (value.constructor === Object) {\n    let keys = Object.keys(value);\n    let len = keys.length;\n    if (len < 0x10) return [0x80|len, keys.map(pairMap, value)];\n    if (len < 0x10000) return [0xde, len, keys.map(pairMap, value)];\n    if (len < 0x100000000) return [0xdf, len, keys.map(pairMap, value)];\n    tooLong(len, value);\n  }\n\n  // ext format family\n  for (let ext of extensions) {\n    if (value.constructor === ext.Constructor) {\n      let buf = ext.encoder(value);\n      let len = buf.length;\n      if (len === 1) return [0xd4, ext.code, buf];\n      if (len === 2) return [0xd5, ext.code, buf];\n      if (len === 4) return [0xd6, ext.code, buf];\n      if (len === 8) return [0xd7, ext.code, buf];\n      if (len === 16) return [0xd8, ext.code, buf];\n      if (len < 0x100) return [0xc7, len, ext.code, buf];\n      if (len < 0x10000) return [0xc8, uint16(len), ext.code, buf];\n      if (len < 0x100000000) return [0xc8, uint32(len), ext.code, buf];\n      tooLong(len, value);\n    }\n  }\n\n  throw new TypeError(\n    \"Unknown type: \" + Object.prototype.toString.call(value) +\n    \"\\nPerhaps register it as a custom type?\");\n}\n\nexport function decode(buf) {\n  let offset = 0,\n      buffer = buf;\n  return realDecode();\n\n  function readMap(len) {\n    let obj = {};\n    while (len-- > 0) {\n      obj[realDecode()] = realDecode();\n    }\n    return obj;\n  }\n\n  function readArray(len) {\n    let arr = new Array(len);\n    for (let i = 0; i < len; i++) {\n      arr[i] = realDecode();\n    }\n    return arr;\n  }\n\n  function readString(len) {\n    var str = \"\";\n    while (len--) {\n      str += String.fromCharCode(buffer[offset++]);\n    }\n    return decode_utf8(str);\n  }\n\n  function readBin(len) {\n    let buf = buffer.slice(offset, offset + len);\n    offset += len;\n    return buf;\n  }\n\n  function readExt(len, type) {\n    let buf = buffer.slice(offset, offset + len);\n    offset += len;\n    let ext = extdex[type];\n    return ext.decoder(buf);\n  }\n\n  function read8() {\n    return (buffer[offset++]) >>> 0;\n  }\n\n  function read16() {\n    return (\n      buffer[offset++] << 8 |\n      buffer[offset++]\n    ) >>> 0;\n  }\n\n  function read32() {\n    return (\n      buffer[offset++] << 24 |\n      buffer[offset++] << 16 |\n      buffer[offset++] << 8 |\n      buffer[offset++]\n    ) >>> 0;\n  }\n\n  function read64() {\n    return read32() * 0x100000000 +\n           read32();\n  }\n\n  function readFloat() {\n    let num = new DataView(buffer).getFloat32(offset, false);\n    offset += 4;\n    return num;\n  }\n\n  function readDouble() {\n    let num = new DataView(buffer).getFloat64(offset, false);\n    offset += 8;\n    return num;\n  }\n\n  function realDecode() {\n    let first = buffer[offset++];\n    // positive fixint\n    if (first < 0x80) return first;\n    // fixmap\n    if (first < 0x90) return readMap(first & 0xf);\n    // fixarray\n    if (first < 0xa0) return readArray(first & 0xf);\n    // fixstr\n    if (first < 0xc0) return readString(first & 0x1f);\n    // negative fixint\n    if (first >= 0xe0) return first - 0x100;\n    switch (first) {\n      // nil\n      case 0xc0: return null;\n      // false\n      case 0xc2: return false;\n      // true\n      case 0xc3: return true;\n      // bin 8\n      case 0xc4: return readBin(read8());\n      // bin 16\n      case 0xc5: return readBin(read16());\n      // bin 32\n      case 0xc6: return readBin(read32());\n      // ext 8\n      case 0xc7: return readExt(read8(), read8());\n      // ext 16\n      case 0xc8: return readExt(read16(), read8());\n      // ext 32\n      case 0xc9: return readExt(read32(), read8());\n      // float 32\n      case 0xca: return readFloat();\n      // float 64\n      case 0xcb: return readDouble();\n      // uint 8\n      case 0xcc: return read8();\n      // uint 16\n      case 0xcd: return read16();\n      // uint 32\n      case 0xce: return read32();\n      // uint 64\n      case 0xcf: return read64();\n      // int 8\n      case 0xd0: return read8() - 0x100;\n      // int 16\n      case 0xd1: return read16() - 0x10000;\n      // int 32\n      case 0xd2: return read32() - 0x100000000;\n      // int 64\n      case 0xd3: return read64() - 0x10000000000000000;\n      // fixext 1\n      case 0xd4: return readExt(1, read8());\n      // fixext 2\n      case 0xd5: return readExt(2, read8());\n      // fixext 4\n      case 0xd6: return readExt(4, read8());\n      // fixext 8\n      case 0xd7: return readExt(8, read8());\n      // fixext 16\n      case 0xd8: return readExt(16, read8());\n      // str 8\n      case 0xd9: return readString(read8());\n      // str 16\n      case 0xda: return readString(read16());\n      // str 32\n      case 0xdb: return readString(read32());\n      // array 16\n      case 0xdc: return readArray(read16());\n      // array 32\n      case 0xdd: return readArray(read32());\n      // map 16\n      case 0xde: return readMap(read16());\n      // map 32\n      case 0xdf: return readMap(read32());\n\n      default: throw new Error(\"Unexpected byte: \" + first.toString(16));\n    }\n  }\n\n}\n","import { register } from \"./msgpack\";\nimport { load } from \"./cas\";\n\n// Register the Link type so we can serialize hashes as a new special type.\n// hash itself is just a 32 byte Uint8Array\nregister(127, Link,\n  (link) => { return link.hash; },\n  (buf) => { return new Link(buf); }\n);\n\n// Link has some nice methods in addition to storing the hash buffer.\nexport function Link(hash) {\n  if (hash.constructor === ArrayBuffer) {\n    hash = new Uint8Array(hash);\n  }\n  if (hash.constructor === Uint8Array) {\n    this.hash = hash;\n    return;\n  }\n  if (typeof hash === \"string\") {\n    if (!/^[0-9a-f]{40}$/.test(hash)) {\n      throw new TypeError(\"Invalid string, expected hash\");\n    }\n    this.hash = new Uint8Array(32);\n    let j = 0;\n    for (let i = 0; i < 40; i += 2) {\n      this.hash[j++] = parseInt(hash.substr(i, 2), 16);\n    }\n    return;\n  }\n  throw new TypeError(\"Invalid hash, expected string or buffer\");\n}\nLink.prototype.resolve = function* resolve() {\n  return yield* load(this);\n}\nLink.prototype.toHex = function toHex() {\n  let hex = \"\";\n  let buf = this.hash;\n  for (let i = 0, l = buf.length; i < l; i++) {\n    let byte = buf[i];\n    hex += (byte < 0x10 ? \"0\" : \"\") + byte.toString(16);\n  }\n  if (!hex) throw new Error(\"WAT\")\n  return hex;\n}\n\n\n// Look for links in an object\nexport function scan(value, onLink) {\n  if (value.constructor === Link) {\n    onLink(value);\n  }\n  else if (Array.isArray(value)) {\n    for (let item of value) scan(item, onLink);\n  }\n  else if (value.constructor === Object) {\n    for (let key in value) {\n      scan(value[key], onLink);\n    }\n  }\n}\n","\nlet db;\n\nfunction getDB() {\n  if (!db) {\n    db = new Promise(function(resolve, reject) {\n      let openreq = indexedDB.open('keyval-store', 1);\n\n      openreq.onerror = function() {\n        reject(openreq.error);\n      };\n\n      openreq.onupgradeneeded = function() {\n        // First time setup: create an empty object store\n        openreq.result.createObjectStore('keyval');\n      };\n\n      openreq.onsuccess = function() {\n        resolve(openreq.result);\n      };\n    });\n  }\n  return db;\n}\n\nfunction withStore(type, callback) {\n  return getDB().then(function(db) {\n    return new Promise(function(resolve, reject) {\n      let transaction = db.transaction('keyval', type);\n      transaction.oncomplete = function() {\n        resolve();\n      };\n      transaction.onerror = function() {\n        reject(transaction.error);\n      };\n      callback(transaction.objectStore('keyval'));\n    });\n  });\n}\n\nexport let idbKeyval = {\n  get: function(key) {\n    let req;\n    return withStore('readonly', function(store) {\n      req = store.get(key);\n    }).then(function() {\n      return req.result;\n    });\n  },\n  set: function(key, value) {\n    return withStore('readwrite', function(store) {\n      store.put(value, key);\n    });\n  },\n  delete: function(key) {\n    return withStore('readwrite', function(store) {\n      store.delete(key);\n    });\n  },\n  clear: function() {\n    return withStore('readwrite', function(store) {\n      store.clear();\n    });\n  },\n  keys: function() {\n    let keys = [];\n    return withStore('readonly', function(store) {\n      // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n      // And openKeyCursor isn't supported by Safari.\n      (store.openKeyCursor || store.openCursor).call(store).onsuccess = function() {\n        if (!this.result) return;\n        keys.push(this.result.key);\n        this.result.continue();\n      };\n    }).then(function() {\n      return keys;\n    });\n  }\n};\n","\nlet shared = new Uint32Array(80);\n\n// Input chunks must be either arrays of bytes or \"raw\" encoded strings\nexport function sha1(buffer) {\n  if (buffer === undefined) return create(false);\n  let shasum = create(true);\n  shasum.update(buffer);\n  return shasum.digest();\n}\n\n// A pure JS implementation of sha1 for non-node environments.\nfunction create(sync) {\n  let h0 = 0x67452301;\n  let h1 = 0xEFCDAB89;\n  let h2 = 0x98BADCFE;\n  let h3 = 0x10325476;\n  let h4 = 0xC3D2E1F0;\n  // The first 64 bytes (16 words) is the data chunk\n  let block, offset = 0, shift = 24;\n  let totalLength = 0;\n  if (sync) block = shared;\n  else block = new Uint32Array(80);\n\n  return { update: update, digest: digest };\n\n  // The user gave us more data.  Store it!\n  function update(chunk) {\n    if (typeof chunk === \"string\") return updateString(chunk);\n    let length = chunk.length;\n    totalLength += length * 8;\n    for (let i = 0; i < length; i++) {\n      write(chunk[i]);\n    }\n  }\n\n  function updateString(string) {\n    let length = string.length;\n    totalLength += length * 8;\n    for (let i = 0; i < length; i++) {\n      write(string.charCodeAt(i));\n    }\n  }\n\n\n  function write(byte) {\n    block[offset] |= (byte & 0xff) << shift;\n    if (shift) {\n      shift -= 8;\n    }\n    else {\n      offset++;\n      shift = 24;\n    }\n    if (offset === 16) processBlock();\n  }\n\n  // No more data will come, pad the block, process and return the result.\n  function digest() {\n    // Pad\n    write(0x80);\n    if (offset > 14 || (offset === 14 && shift < 24)) {\n      processBlock();\n    }\n    offset = 14;\n    shift = 24;\n\n    // 64-bit length big-endian\n    write(0x00); // numbers this big aren't accurate in javascript anyway\n    write(0x00); // ..So just hard-code to zero.\n    write(totalLength > 0xffffffffff ? totalLength / 0x10000000000 : 0x00);\n    write(totalLength > 0xffffffff ? totalLength / 0x100000000 : 0x00);\n    for (let s = 24; s >= 0; s -= 8) {\n      write(totalLength >> s);\n    }\n\n    // At this point one last processBlock() should trigger and we can pull out the result.\n    return toHex(h0) +\n           toHex(h1) +\n           toHex(h2) +\n           toHex(h3) +\n           toHex(h4);\n  }\n\n  // We have a full block to process.  Let's do it!\n  function processBlock() {\n    // Extend the sixteen 32-bit words into eighty 32-bit words:\n    for (let i = 16; i < 80; i++) {\n      let w = block[i - 3] ^ block[i - 8] ^ block[i - 14] ^ block[i - 16];\n      block[i] = (w << 1) | (w >>> 31);\n    }\n\n    // log(block);\n\n    // Initialize hash value for this chunk:\n    let a = h0;\n    let b = h1;\n    let c = h2;\n    let d = h3;\n    let e = h4;\n    let f, k;\n\n    // Main loop:\n    for (let i = 0; i < 80; i++) {\n      if (i < 20) {\n        f = d ^ (b & (c ^ d));\n        k = 0x5A827999;\n      }\n      else if (i < 40) {\n        f = b ^ c ^ d;\n        k = 0x6ED9EBA1;\n      }\n      else if (i < 60) {\n        f = (b & c) | (d & (b | c));\n        k = 0x8F1BBCDC;\n      }\n      else {\n        f = b ^ c ^ d;\n        k = 0xCA62C1D6;\n      }\n      let temp = (a << 5 | a >>> 27) + f + e + k + (block[i]|0);\n      e = d;\n      d = c;\n      c = (b << 30 | b >>> 2);\n      b = a;\n      a = temp;\n    }\n\n    // Add this chunk's hash to result so far:\n    h0 = (h0 + a) | 0;\n    h1 = (h1 + b) | 0;\n    h2 = (h2 + c) | 0;\n    h3 = (h3 + d) | 0;\n    h4 = (h4 + e) | 0;\n\n    // The block is now reusable.\n    offset = 0;\n    for (let i = 0; i < 16; i++) {\n      block[i] = 0;\n    }\n  }\n\n  function toHex(word) {\n    let hex = \"\";\n    for (let i = 28; i >= 0; i -= 4) {\n      hex += ((word >> i) & 0xf).toString(16);\n    }\n    return hex;\n  }\n\n}\n","import { Link } from \"./link\";\nimport { encode, decode } from \"./msgpack\";\nimport { idbKeyval as storage } from \"./idb-keyval\";\nimport { sha1 } from \"./sha1\";\n\nfunction digest(buf) {\n  return new Link(sha1(buf));\n}\n\nexport function* save(value) {\n  let buf = encode(value);\n  let link = digest(buf);\n  yield storage.set(link.toHex(), buf);\n  return link;\n}\n\nexport function* load(link) {\n  let hex = typeof link === \"string\" ?\n    link : link.toHex();\n  return decode(yield storage.get(hex));\n}\n","import { save } from \"./cas\";\nimport { runAll } from \"./async\";\nimport { idbKeyval as storage } from \"./idb-keyval\";\n\nfunction* get(path, format) {\n  format = format || \"json\";\n  let url = `https://api.github.com/${path}`;\n  let headers = {\n    Accept: format === 'arrayBuffer' || format === 'text' ?\n      \"application/vnd.github.v3.raw\" :\n      \"application/vnd.github.v3+json\"\n  };\n  let username = (yield storage.get(\"GITHUB_USERNAME\")) ||\n    prompt(\"Enter github username (for API auth)\");\n  if (username) yield storage.set(\"GITHUB_USERNAME\", username);\n  let token = (yield storage.get(\"GITHUB_TOKEN\")) ||\n    prompt(\"Enter personal access token (for API auth)\");\n  if (token) yield storage.set(\"GITHUB_TOKEN\", token);\n  headers.Authorization = `Basic ${btoa(`${username}:${token}`)}`;\n  let res = yield fetch(url, {headers:headers});\n  return res && (yield res[format]());\n}\n\nexport function* importCommit(owner, repo, rootSha, onStart, onFinish) {\n\n  let modeToRead = {\n     '40000': readTree, // tree\n    '040000': readTree, // tree\n    '100644': readBlob, // blob\n    '100755': readExec, // exec\n    '120000': readSym, // sym\n    '160000': readSubmodule  // commit\n  }\n\n  return yield* readCommit(rootSha);\n\n  function* deref(ref) {\n    if (/^[0-9a-f]{40}$/.test(ref)) return ref;\n    let result = yield* get(`repos/${owner}/${repo}/git/refs/${ref}`);\n    return result && result.object.sha;\n  }\n\n  function* gitLoad(type, sha) {\n    onStart(sha);\n    let result;// = yield storage.get(sha);\n    if (!result) {\n      result = yield* get(\n        `repos/${owner}/${repo}/git/${type}s/${sha}`,\n        type === \"blob\" ? \"arrayBuffer\" : \"json\"\n      );\n      if (result) {\n        if (type === \"blob\") result = new Uint8Array(result);\n        // yield storage.set(sha, result);\n      }\n    }\n    onFinish(sha);\n    return result;\n  }\n\n  function bufToString(buf) {\n    let str = \"\";\n    for (let i = 0, l = buf.length; i <l; i++) {\n      str += String.fromCharCode(buf[i]);\n    }\n    return str;\n  }\n\n  function parseGitmodules(buf) {\n    let text = bufToString(buf);\n    let config = {};\n    let section;\n    text.split(/[\\r\\n]+/).forEach(function (line) {\n      let match = line.match(/\\[([^ \\t\"\\]]+) *(?:\"([^\"]+)\")?\\]/);\n      if (match) {\n        section = config[match[1]] || (config[match[1]] = {});\n        if (match[2]) {\n          section = section[match[2]] = {};\n        }\n        return;\n      }\n      match = line.match(/([^ \\t=]+)[ \\t]*=[ \\t]*(.+)/);\n      if (match) {\n        section[match[1]] = match[2];\n      }\n    });\n    return config;\n  }\n\n  function* readSym(sha) {\n    let buf = yield* gitLoad(\"blob\", sha);\n    return bufToString(buf);\n  }\n\n  function* readExec(sha) {\n    let buf = yield* gitLoad(\"blob\", sha);\n    // We're throwing away the exec bit\n    return yield* save(buf);\n  }\n\n  function* readBlob(sha) {\n    let buf = yield* gitLoad(\"blob\", sha);\n    return yield* save(buf);\n  }\n\n  function* readTree(sha, path, gitmodules) {\n    let result = yield* gitLoad(\"tree\", sha);\n    let tasks = [];\n    for (let entry of result.tree) {\n      if (!gitmodules && entry.path === \".gitmodules\") {\n        gitmodules = parseGitmodules(\n          yield* gitLoad(\"blob\", entry.sha)\n        );\n      }\n      let newPath = path ? `${path}/${entry.path}` : entry.path;\n      tasks.push(modeToRead[entry.mode](\n        entry.sha, newPath, gitmodules\n      ));\n    }\n    let tree = {};\n    (yield runAll(tasks)).forEach(function (item, i) {\n      let entry = result.tree[i];\n      tree[entry.path] = item;\n    });\n    return tree;\n  }\n\n  function* readCommit(sha) {\n    sha = yield* deref(sha);\n    let commit = yield* gitLoad(\"commit\", sha);\n    // We're throwing away the commit information and returning the tree directly.\n    return yield* readTree(commit.tree.sha);\n  }\n\n  function* readSubmodule(sha, path, gitmodules) {\n    let remote;\n    for (let key in gitmodules.submodule) {\n      let sub = gitmodules.submodule[key];\n      if (sub.path !== path) continue;\n      remote = sub.url;\n      break;\n    }\n    if (!remote) throw new Error(`No gitmodules entry for ${path}`);\n    let match = remote.match(/github.com[:\\/]([^\\/]+)\\/(.+?)(\\.git)?$/);\n    if (!match) throw new Error(`Submodule is not on github ${remote}`);\n    // Throw away the submodule information and return the tree.\n    return yield* importCommit(match[1], match[2], sha, onStart, onFinish);\n  }\n}\n","//////////////////////////////////////\n//                                  //\n// JS domBuilder Library            //\n//                                  //\n// Tim Caswell <tim@creationix.com> //\n//                                  //\n//////////////////////////////////////\n\nexport function domBuilder(json, refs) {\n\n  // Render strings as text nodes\n  if (typeof json === 'string') return document.createTextNode(json);\n\n  // Pass through html elements and text nodes as-is\n  if (json instanceof HTMLElement || json instanceof window.Text) return json;\n\n  // Stringify any other value types\n  if (!Array.isArray(json)) return document.createTextNode(json + \"\");\n\n  // Empty arrays are just empty fragments.\n  if (!json.length) return document.createDocumentFragment();\n\n  var node, first;\n  for (var i = 0, l = json.length; i < l; i++) {\n    var part = json[i];\n\n    if (!node) {\n      if (typeof part === 'string') {\n        // Create a new dom node by parsing the tagline\n        var tag = part.match(TAG_MATCH);\n        tag = tag ? tag[0] : \"div\";\n        node = document.createElement(tag);\n        first = true;\n        var classes = part.match(CLASS_MATCH);\n        if (classes) node.setAttribute('class', classes.map(stripFirst).join(' '));\n        var id = part.match(ID_MATCH);\n        if (id) node.setAttribute('id', id[0].substr(1));\n        var ref = part.match(REF_MATCH);\n        if (refs && ref) refs[ref[0].substr(1)] = node;\n        continue;\n      } else if (typeof part === \"function\") {\n        return domBuilder(part.apply(null, json.slice(i + 1)), refs);\n      } else {\n        node = document.createDocumentFragment();\n      }\n    }\n\n    // Except the first item if it's an attribute object\n    if (first && typeof part === 'object' && part.constructor === Object) {\n      setAttrs(node, part);\n    } else {\n      node.appendChild(domBuilder(part, refs));\n    }\n    first = false;\n  }\n  return node;\n}\n\nfunction setAttrs(node, attrs) {\n  var keys = Object.keys(attrs);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    var value = attrs[key];\n    if (key === \"$\") {\n      value(node);\n    } else if (key === \"css\" || key === \"style\" && value.constructor === Object) {\n      setStyle(node.style, value);\n    } else if (key.substr(0, 2) === \"on\") {\n      node.addEventListener(key.substr(2), value, false);\n    } else if (typeof value === \"boolean\") {\n      if (value) node.setAttribute(key, key);\n    } else {\n      node.setAttribute(key, value);\n    }\n  }\n}\n\nfunction setStyle(style, attrs) {\n  var keys = Object.keys(attrs);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    style[key] = attrs[key];\n  }\n}\n\nvar CLASS_MATCH = /\\.[^.#$]+/g,\n    ID_MATCH = /#[^.#$]+/,\n    REF_MATCH = /\\$[^.#$]+/,\n    TAG_MATCH = /^[^.#$]+/;\n\nfunction stripFirst(part) {\n  return part.substr(1);\n}\n","// A simple mime database.\nlet types;\n\nexport let defaultMime = \"application/octet-stream\";\n\nexport function guess(path) {\n  path = path.toLowerCase().trim();\n  var index = path.lastIndexOf(\"/\");\n  if (index >= 0) {\n    path = path.substr(index + 1);\n  }\n  index = path.lastIndexOf(\".\");\n  if (index >= 0) {\n    path = path.substr(index + 1);\n  }\n  return types[path] || defaultMime;\n}\n\n// Borrowed and passed around from who knows where, last grabbed from connect.\ntypes = {\n  \"3gp\": \"video/3gpp\",\n  a: \"application/octet-stream\",\n  ai: \"application/postscript\",\n  aif: \"audio/x-aiff\",\n  aiff: \"audio/x-aiff\",\n  asc: \"application/pgp-signature\",\n  asf: \"video/x-ms-asf\",\n  asm: \"text/x-asm\",\n  asx: \"video/x-ms-asf\",\n  atom: \"application/atom+xml\",\n  au: \"audio/basic\",\n  avi: \"video/x-msvideo\",\n  bat: \"application/x-msdownload\",\n  bin: \"application/octet-stream\",\n  bmp: \"image/bmp\",\n  bz2: \"application/x-bzip2\",\n  c: \"text/x-csrc\",\n  cab: \"application/vnd.ms-cab-compressed\",\n  can: \"application/candor\",\n  cc: \"text/x-c++src\",\n  chm: \"application/vnd.ms-htmlhelp\",\n  \"class\": \"application/octet-stream\",\n  com: \"application/x-msdownload\",\n  conf: \"text/plain\",\n  cpp: \"text/x-c\",\n  crt: \"application/x-x509-ca-cert\",\n  css: \"text/css\",\n  csv: \"text/csv\",\n  cxx: \"text/x-c\",\n  deb: \"application/x-debian-package\",\n  der: \"application/x-x509-ca-cert\",\n  diff: \"text/x-diff\",\n  djv: \"image/vnd.djvu\",\n  djvu: \"image/vnd.djvu\",\n  dll: \"application/x-msdownload\",\n  dmg: \"application/octet-stream\",\n  doc: \"application/msword\",\n  dot: \"application/msword\",\n  dtd: \"application/xml-dtd\",\n  dvi: \"application/x-dvi\",\n  ear: \"application/java-archive\",\n  eml: \"message/rfc822\",\n  eps: \"application/postscript\",\n  exe: \"application/x-msdownload\",\n  f: \"text/x-fortran\",\n  f77: \"text/x-fortran\",\n  f90: \"text/x-fortran\",\n  flv: \"video/x-flv\",\n  \"for\": \"text/x-fortran\",\n  gem: \"application/octet-stream\",\n  gemspec: \"text/x-script.ruby\",\n  gif: \"image/gif\",\n  gyp: \"text/x-script.python\",\n  gypi: \"text/x-script.python\",\n  gz: \"application/x-gzip\",\n  h: \"text/x-chdr\",\n  hh: \"text/x-c++hdr\",\n  htm: \"text/html\",\n  html: \"text/html\",\n  ico: \"image/vnd.microsoft.icon\",\n  ics: \"text/calendar\",\n  ifb: \"text/calendar\",\n  iso: \"application/octet-stream\",\n  jar: \"application/java-archive\",\n  java: \"text/x-java-source\",\n  jnlp: \"application/x-java-jnlp-file\",\n  jpeg: \"image/jpeg\",\n  jpg: \"image/jpeg\",\n  js: \"application/javascript\",\n  json: \"application/json\",\n  less: \"text/css\",\n  log: \"text/plain\",\n  lua: \"text/x-script.lua\",\n  luac: \"application/x-bytecode.lua\",\n  makefile: \"text/x-makefile\",\n  m3u: \"audio/x-mpegurl\",\n  m4v: \"video/mp4\",\n  man: \"text/troff\",\n  manifest: \"text/cache-manifest\",\n  markdown: \"text/x-markdown\",\n  mathml: \"application/mathml+xml\",\n  mbox: \"application/mbox\",\n  mdoc: \"text/troff\",\n  md: \"text/x-markdown\",\n  me: \"text/troff\",\n  mid: \"audio/midi\",\n  midi: \"audio/midi\",\n  mime: \"message/rfc822\",\n  mml: \"application/mathml+xml\",\n  mng: \"video/x-mng\",\n  mov: \"video/quicktime\",\n  mp3: \"audio/mpeg\",\n  mp4: \"video/mp4\",\n  mp4v: \"video/mp4\",\n  mpeg: \"video/mpeg\",\n  mpg: \"video/mpeg\",\n  ms: \"text/troff\",\n  msi: \"application/x-msdownload\",\n  odp: \"application/vnd.oasis.opendocument.presentation\",\n  ods: \"application/vnd.oasis.opendocument.spreadsheet\",\n  odt: \"application/vnd.oasis.opendocument.text\",\n  ogg: \"application/ogg\",\n  p: \"text/x-pascal\",\n  pas: \"text/x-pascal\",\n  pbm: \"image/x-portable-bitmap\",\n  pdf: \"application/pdf\",\n  pem: \"application/x-x509-ca-cert\",\n  pgm: \"image/x-portable-graymap\",\n  pgp: \"application/pgp-encrypted\",\n  pkg: \"application/octet-stream\",\n  pl: \"text/x-script.perl\",\n  pm: \"text/x-script.perl-module\",\n  png: \"image/png\",\n  pnm: \"image/x-portable-anymap\",\n  ppm: \"image/x-portable-pixmap\",\n  pps: \"application/vnd.ms-powerpoint\",\n  ppt: \"application/vnd.ms-powerpoint\",\n  ps: \"application/postscript\",\n  psd: \"image/vnd.adobe.photoshop\",\n  py: \"text/x-script.python\",\n  qt: \"video/quicktime\",\n  ra: \"audio/x-pn-realaudio\",\n  rake: \"text/x-script.ruby\",\n  ram: \"audio/x-pn-realaudio\",\n  rar: \"application/x-rar-compressed\",\n  rb: \"text/x-script.ruby\",\n  rdf: \"application/rdf+xml\",\n  roff: \"text/troff\",\n  rpm: \"application/x-redhat-package-manager\",\n  rss: \"application/rss+xml\",\n  rtf: \"application/rtf\",\n  ru: \"text/x-script.ruby\",\n  s: \"text/x-asm\",\n  sgm: \"text/sgml\",\n  sgml: \"text/sgml\",\n  sh: \"application/x-sh\",\n  sig: \"application/pgp-signature\",\n  snd: \"audio/basic\",\n  so: \"application/octet-stream\",\n  svg: \"image/svg+xml\",\n  svgz: \"image/svg+xml\",\n  swf: \"application/x-shockwave-flash\",\n  t: \"text/troff\",\n  tar: \"application/x-tar\",\n  tbz: \"application/x-bzip-compressed-tar\",\n  tci: \"application/x-topcloud\",\n  tcl: \"application/x-tcl\",\n  tex: \"application/x-tex\",\n  texi: \"application/x-texinfo\",\n  texinfo: \"application/x-texinfo\",\n  text: \"text/plain\",\n  tif: \"image/tiff\",\n  tiff: \"image/tiff\",\n  torrent: \"application/x-bittorrent\",\n  tr: \"text/troff\",\n  ts: \"application/x-typescript\",\n  ttf: \"application/x-font-ttf\",\n  txt: \"text/plain\",\n  vcf: \"text/x-vcard\",\n  vcs: \"text/x-vcalendar\",\n  vrml: \"model/vrml\",\n  war: \"application/java-archive\",\n  wav: \"audio/x-wav\",\n  webapp: \"application/x-web-app-manifest+json\",\n  webm: \"video/webm\",\n  wma: \"audio/x-ms-wma\",\n  wmv: \"video/x-ms-wmv\",\n  wmx: \"video/x-ms-wmx\",\n  wrl: \"model/vrml\",\n  wsdl: \"application/wsdl+xml\",\n  xbm: \"image/x-xbitmap\",\n  xhtml: \"application/xhtml+xml\",\n  xls: \"application/vnd.ms-excel\",\n  xml: \"application/xml\",\n  xpm: \"image/x-xpixmap\",\n  xsl: \"application/xml\",\n  xslt: \"application/xslt+xml\",\n  yaml: \"text/yaml\",\n  yml: \"text/yaml\",\n  zip: \"application/zip\"\n};\n","import { run } from \"./async\";\nimport { importCommit } from \"./github\";\nimport { save, load } from \"./cas\";\nimport { idbKeyval as storage } from \"./idb-keyval\";\nimport { domBuilder } from \"./dombuilder\";\nimport { guess } from \"./mime\";\n\nwindow.storage = storage;\nlet $ = {};\nfunction render(root) {\n  let tree = [\n    renderTreeView(root),\n    [\"tree-resizer\"],\n    [\"editor-view\",\n      [\"iframe$iframe\", {frameBorder:0,style:{display:\"none\"}}]\n    ]\n  ]\n  document.body.textContent = \"\";\n  document.body.appendChild(domBuilder(tree, $));\n}\n\nfunction renderTreeView(root) {\n  return [\"tree-view\", {onclick:onClick},\n    [\"ul\",\n      renderTree(\"\", \"\", root)\n    ]\n  ];\n  function onClick(evt) {\n    let node = evt.target;\n    while (!node.dataset.path) {\n      node = node.parentElement\n      if (node === document.body) return;\n    }\n    let data = node.dataset;\n    let url = `/${$.root}/${data.path}`;\n    $.iframe.setAttribute(\"src\", url);\n    $.iframe.style.display = \"inherit\";\n  }\n}\n\nfunction renderTree(path, name, node) {\n  let entries = [];\n  for (let key in node) {\n    let subPath = (path ? path + \"/\" : \"\") + key;\n    let sub = node[key];\n    entries.push(\n      (sub.constructor === Object ? renderTree :\n       typeof sub === \"string\" ? renderLink :\n       renderFile)(subPath, key, sub)\n    );\n  }\n  let displayName = name || $.name;\n  let icon = \"icon-down-dir\";\n  return [\"li\",\n    { class: icon,\n      title: name,\n      'data-type': 'tree',\n      'data-name': name,\n      'data-path': path },\n    [\"span.icon-folder\", displayName],\n    [\"ul\"].concat(entries)\n  ];\n}\nfunction renderLink(path, name, target) {\n  let icon = \"icon-link\";\n  return [\"li\",\n    { title: target,\n      'data-type': 'link',\n      'data-target': target,\n      'data-name': name,\n      'data-path': path },\n    [\"span\", { class: icon }, name]\n  ];\n}\nfunction renderFile(path, name) {\n  let mime = guess(path);\n  let icon = guessIcon(mime);\n  return [\"li\",\n    { title: name,\n      'data-type': 'file',\n      'data-mime': mime,\n      'data-name': name,\n      'data-path': path },\n    [\"span\", { class: icon }, name]\n  ];\n}\n\nfunction guessIcon(mime) {\n  if (/pdf$/.test(mime)) return \"icon-file-pdf\";\n  if (/^image/.test(mime)) return \"icon-file-image\";\n  if (/^audio/.test(mime)) return \"icon-file-audio\";\n  if (/^video/.test(mime)) return \"icon-file-video\";\n  if (/^zip2?$/.test(mime)) return \"icon-file-archive\";\n  if (/^application.*(javascript|json|xml)$/.test(mime) ||\n      /^text.*(src|html|css|lua|script)$/.test(mime)) return \"icon-file-code\";\n  if (/^text/.test(mime)) return \"icon-doc-text\";\n  return \"icon-doc\";\n}\n\n// Register a service worker to serve it out as static content.\nnavigator.serviceWorker.register(\"worker.js\");\n\nlet done = 0, total = 0;\nfunction onStart() {\n  total++;\n  onUpdate();\n}\nfunction onFinish() {\n  done++;\n  onUpdate();\n}\nlet dirty = false;\nfunction onUpdate() {\n  if (dirty) return;\n  dirty = true;\n  requestAnimationFrame(update);\n}\nfunction update() {\n  document.body.innerHTML = `<div style=\"text-align:center\"><h1>Importing from github (${done}/${total})</h1><progress class=\"import\" max=\"${total}\" value=\"${done}\"></progress></div>`;\n  dirty = false;\n}\n\nrun(function*() {\n\n  let match = window.location.hash.match(/github:\\/\\/([^\\/]+)\\/([^\\/]+)\\/refs\\/(.+)$/);\n  let owner, repo, ref;\n  if (match) {\n    owner = match[1];\n    repo = match[2];\n    ref = match[3];\n  }\n  else {\n    owner = \"creationix\";\n    repo = \"revision\";\n    ref = \"heads/master\";\n  }\n  $.name = `${owner}/${repo}`;\n  let key = `github://${owner}/${repo}/refs/${ref}`;\n  window.location.hash = key;\n  // Import repository from github into local CAS graph\n  let root;// = yield storage.get(key);\n  if (!root) {\n    console.log(`Importing github://${owner}/${repo}/refs/${ref}`);\n    let commit = yield* importCommit(owner, repo, ref, onStart, onFinish);\n    let link = yield* save(commit);\n    root = link.toHex();\n    yield storage.set(key, link.toHex());\n  }\n  $.root = root;\n\n  render(yield* load(root));\n\n}());\n"],"names":["storage"],"mappings":"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"}